{"version":3,"sources":["context/user.js","components/appRoute/appRoute.js","components/connectButton/connectButton.js","components/navbar/navbar.js","components/input/input.js","components/pswInput/pswInput.js","components/submitButton/submitButton.js","validations/validations.js","api/api.js","pages/login/login.js","components/signupForm/signupForm.js","pages/signup/signup.js","components/categorySelect/categorySelect.js","components/uploadForm/uploadForm.js","components/authorImage/authorImage.js","pages/profile/profile.js","components/header/header.js","components/downloadImage/downloadImage.js","contracts/photoken.js","pages/home/home.js","pages/about/about.js","App.js","serviceWorker.js","index.js","img/pho_logo.png","img/sign.png"],"names":["UserContext","createContext","AppRoute","Component","component","render","rest","user","useContext","props","logged","to","ConnectButton","setUser","onConnect","a","window","ethereum","request","method","accounts","account","wallet","ToastsStore","warning","className","onClick","Navbar","useState","toggle","setToggle","src","logo","alt","input","name","type","value","onChange","placeholder","label","classe","error","PswInput","hidden","setHidden","SubmitButton","txt","loading","width","color","bcolor","call","style","backgroundColor","size","mailValidation","mail","test","textValidation","field","sendSignupData","surname","psw","Parse","User","set","signUp","send","ok","console","log","sendLoginData","logIn","addImage","categories","author","hash","cid","Image","Object","extend","newImage","save","logout","logOut","getImagesByAuthor","query","Query","equalTo","find","getImages","Login","history","setLog","general","setError","setLoading","e","target","onLogin","mailIsValid","pswIsValid","res","session","JSON","parse","localStorage","getItem","process","sessionToken","email","token","push","prev","message","textAlign","SignupForm","repsw","setField","onSign","nameIsValid","surnameIsValid","walletIsValid","Wvalidator","validate","repswIsValid","signup","signupImg","CategorySelect","isMulti","options","classNamePrefix","theme","borderRadius","colors","primary","borderWidth","border","UploadForm","display","onClose","selectedFile","setSelectedFile","select","fields","setFields","isFile","setIsFile","msg","ipfsMsg","setIpfsMsg","ipfs","IpfsApi","host","port","protocol","upload","add","ipfsres","path","files","ob","map","authorImage","link","Profile","uploadForm","setDisplay","url","setUrl","getAuthorImages","img","i","id","attributes","length","useEffect","string","marginTop","c","key","header","DownloadImage","onDownload","data","ipfsUrl","phoTokenAbi","inputs","stateMutability","anonymous","indexed","internalType","outputs","Home","web3","Web3","givenProvider","eth","getAccounts","phoContract","Contract","getHomeImages","orientation","isMetaMask","methods","mint","transfer","store","position","ToastsContainerPosition","BOTTOM_CENTER","about","App","REACT_APP_ID","REACT_APP_KEY","getUserLoged","serverURL","initialize","Provider","Signup","About","exact","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.c0014f90.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(\"u\");\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/user\";\r\n\r\nconst AppRoute = ({ component: Component, render, ...rest }) => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!user.logged) return <Redirect to=\"/login\" />;\r\n                return Component ? (\r\n                        <Component {...props} />\r\n                ) : (\r\n                    render(props)\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default AppRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport { ToastsStore } from \"react-toasts\";\r\nimport \"./connectButton.scss\";\r\n\r\nconst ConnectButton = () => {\r\n    const { user, setUser } = useContext(UserContext);\r\n    const onConnect = async () => {\r\n        if (window.ethereum) {\r\n            const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n            const account = accounts[0];\r\n            setUser(() => ({\r\n                ...user,\r\n                wallet: account,\r\n            }));\r\n        } else {\r\n            ToastsStore.warning(\"Wallet not detected\");\r\n        }\r\n    };\r\n    return (\r\n        <button className=\"connect-btn\" onClick={() => onConnect()}>\r\n            Connect\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ConnectButton;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { TiThMenu } from \"react-icons/ti\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport logo from \"../../img/pho_logo.png\";\r\nimport ConnectButton from \"../connectButton/connectButton\";\r\nimport \"./navbar.scss\";\r\n\r\nconst Navbar = () => {\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    const onToggle = () => {\r\n        setToggle(() => !toggle);\r\n    };\r\n\r\n    const { user } = useContext(UserContext);\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <button className=\"activator\" onClick={() => onToggle()}>\r\n                <TiThMenu />\r\n            </button>\r\n            <Link to=\"/home\">\r\n                <img className=\"logo\" src={logo} alt=\"pho block logo\" />\r\n            </Link>\r\n            {user.logged ? (\r\n                <ul className={toggle ? \"links show-nav\" : \"links\"}>\r\n                    <Link className=\"ali dist\" to=\"/about\">\r\n                        About\r\n                    </Link>\r\n                    <Link className=\"ali dist\" to=\"/profile\">\r\n                        Profile\r\n                    </Link>\r\n                    <ConnectButton />\r\n                </ul>\r\n            ) : (\r\n                <ul className={toggle ? \"links show-nav\" : \"links\"}>\r\n                    <Link className=\"ali dist\" to=\"/about\">\r\n                        About\r\n                    </Link>\r\n                    <Link className=\"ali dist\" to=\"/login\">\r\n                        Log in\r\n                    </Link>\r\n                    <Link className=\"ali dist\" to=\"/signup\">\r\n                        Sign Up\r\n                    </Link>\r\n                    <ConnectButton />\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./input.scss\";\r\n\r\nconst input = ({ name, type, value, onChange, placeholder, label, classe, error }) => {\r\n    return (\r\n        <div className=\"input-wrapper\">\r\n            <label className=\"input-label\">{label}</label>\r\n            <input\r\n                className={classe}\r\n                name={name}\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n                placeholder={placeholder}\r\n            />\r\n            <p className=\"input-error\">{error}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;\r\n","import React, { useState } from \"react\";\r\nimport { BsEyeFill, BsEyeSlashFill } from \"react-icons/bs\";\r\nimport \"./pswInput.scss\";\r\n\r\nconst PswInput = ({ label, onChange, name, placeholder, error }) => {\r\n    const [hidden, setHidden] = useState(true);\r\n\r\n    return (\r\n        <div className=\"psw-input-cont\">\r\n            <label className=\"psw-label\">{label}</label>\r\n            <div className=\"psw-input-wrapper\">\r\n                <input\r\n                    className=\"psw-input\"\r\n                    type={hidden ? \"password\" : \"text\"}\r\n                    onChange={onChange}\r\n                    name={name}\r\n                    placeholder={placeholder}\r\n                />\r\n                {hidden ? (\r\n                    <BsEyeSlashFill onClick={() => setHidden(() => false)} />\r\n                ) : (\r\n                    <BsEyeFill onClick={() => setHidden(() => true)} />\r\n                )}\r\n            </div>\r\n            <p className=\"psw-error\">{error}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PswInput;\r\n","import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./submitButton.scss\";\r\n\r\nconst SubmitButton = ({ txt, loading, width, color, bcolor, call }) => {\r\n    return (\r\n        <button\r\n            type=\"submit\"\r\n            style={{ width: width, backgroundColor: bcolor, color: color }}\r\n            className=\"btn-submit\"\r\n            onClick={() => call()}\r\n        >\r\n            {txt}\r\n            <span className=\"spin\">\r\n                <ClipLoader loading={loading} color={\"#fff\"} size={12} />\r\n            </span>\r\n        </button>\r\n    );\r\n};\r\n\r\nSubmitButton.propTypes = {\r\n    txt: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    width: PropTypes.string,\r\n    color: PropTypes.string,\r\n    bcolor: PropTypes.string,\r\n    call: PropTypes.func,\r\n};\r\n\r\nexport default SubmitButton;\r\n","export const mailValidation = (mail) => {\r\n    if (\r\n        mail &&\r\n        !/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n            mail\r\n        )\r\n    ) {\r\n        return \"invalid\";\r\n    } else if (!mail) {\r\n        return \"required\";\r\n    } else return \"valid\";\r\n};\r\n\r\nexport const textValidation = (field) => {\r\n    if (!field) {\r\n        return false;\r\n    } else return true;\r\n};\r\n\r\nexport const repswValidation = (psw, repsw) => {\r\n    if (!repsw) {\r\n        return \"required\";\r\n    } else if (psw !== repsw) {\r\n        return \"nomatch\";\r\n    } else {\r\n        return \"valid\";\r\n    }\r\n};\r\n","import Parse from \"parse\";\r\n\r\nexport const sendSignupData = async ({ name, surname, wallet, mail, psw }) => {\r\n    try {\r\n        const user = new Parse.User();\r\n        user.set(\"username\", mail);\r\n        user.set(\"email\", mail);\r\n        user.set(\"password\", psw);\r\n        user.set(\"author\", `${name} ${surname}`);\r\n        user.set(\"wallet\", wallet);\r\n        const send = await user.signUp();\r\n        return { ok: \"ok\", send: send };\r\n    } catch (error) {\r\n        console.log(\"Error sending data to server when signed up\");\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const sendLoginData = async ({ mail, psw }) => {\r\n    try {\r\n        const send = await Parse.User.logIn(mail, psw);\r\n        return { ok: \"ok\", send: send };\r\n    } catch (error) {\r\n        console.log(\"Error sending data to server when loggin in\");\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const addImage = async (categories, author, hash, wallet, cid) => {\r\n    try {\r\n        const Image = Parse.Object.extend(\"Image\");\r\n        const newImage = new Image();\r\n        newImage.set(\"hash\", hash);\r\n        newImage.set(\"author\", author);\r\n        newImage.set(\"wallet\", wallet);\r\n        newImage.set(\"categories\", categories);\r\n        newImage.set(\"cid\", cid);\r\n        const send = await newImage.save();\r\n        return { ok: \"ok\", send: send };\r\n    } catch (e) {\r\n        return e;\r\n    }\r\n};\r\n\r\nexport const logout = async () => {\r\n    await Parse.User.logOut();\r\n    return;\r\n};\r\n\r\nexport const getImagesByAuthor = async (author) => {\r\n    try {\r\n        const Image = Parse.Object.extend(\"Image\");\r\n        const query = new Parse.Query(Image);\r\n        query.equalTo(\"author\", author);\r\n        const send = await query.find();\r\n        return { ok: \"ok\", send: send };\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const getImages = async () => {\r\n    try {\r\n        const Image = Parse.Object.extend(\"Image\");\r\n        const query = new Parse.Query(Image);\r\n        const send = await query.find();\r\n        return { ok: \"ok\", send: send };\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport Input from \"../../components/input/input\";\r\nimport PswInput from \"../../components/pswInput/pswInput\";\r\nimport SubmitButton from \"../../components/submitButton/submitButton\";\r\nimport { mailValidation, textValidation } from \"../../validations/validations\";\r\nimport { sendLoginData } from \"../../api/api\";\r\nimport \"./login.scss\";\r\nimport { UserContext } from \"../../context/user\";\r\n\r\nconst Login = ({ history }) => {\r\n    const [log, setLog] = useState({ mail: \"\", psw: \"\" });\r\n    const [error, setError] = useState({ mail: \"\", psw: \"\", general: \"\", color: \"#4ED900\" });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n    const onChange = (e) => {\r\n        setLog({\r\n            ...log,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const { REACT_APP_ID } = process.env;\r\n\r\n    const onLogin = async () => {\r\n        setLoading(() => true);\r\n        const mailIsValid = mailValidation(log.mail);\r\n        if (mailIsValid === \"invalid\") {\r\n            setError((error) => ({ ...error, mail: \"Invalid email\" }));\r\n        } else if (mailIsValid === \"required\") {\r\n            setError((error) => ({ ...error, mail: \"Email is required\" }));\r\n        } else setError((error) => ({ ...error, mail: \"\" }));\r\n        const pswIsValid = textValidation(log.psw);\r\n        pswIsValid\r\n            ? setError((error) => ({ ...error, psw: \"\" }))\r\n            : setError((error) => ({ ...error, psw: \"Password is required\" }));\r\n        if (mailIsValid === \"valid\" && pswIsValid) {\r\n            const res = await sendLoginData(log);\r\n            if (res.ok) {\r\n                const session = JSON.parse(\r\n                    localStorage.getItem(`Parse/${REACT_APP_ID}/currentUser`)\r\n                );\r\n                if (session) {\r\n                    session.sessionToken\r\n                        ? setUser(() => ({\r\n                              logged: true,\r\n                              author: session.author,\r\n                              mail: session.email,\r\n                              wallet: session.wallet,\r\n                              token: session.sessionToken,\r\n                          }))\r\n                        : setUser(() => ({\r\n                              logged: false,\r\n                          }));\r\n                } else return { logged: false };\r\n                //go to homepage\r\n\r\n                setLoading(() => false);\r\n                history.push(`/home`);\r\n            } else {\r\n                setLoading(() => false);\r\n                setError((prev) => ({ ...prev, color: \"#ff0000\", general: res.message }));\r\n            }\r\n        } else {\r\n            setLoading(() => false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Navbar />\r\n            <div className=\"login-main\">\r\n                <p className=\"login-title\">Enjoy</p>\r\n                <div className=\"login-form\">\r\n                    <Input\r\n                        classe=\"input\"\r\n                        name=\"mail\"\r\n                        label=\"Email\"\r\n                        placeholder=\"Email\"\r\n                        type=\"text\"\r\n                        onChange={onChange}\r\n                        error={error.mail}\r\n                    />\r\n                    <PswInput\r\n                        name=\"psw\"\r\n                        label=\"Password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={onChange}\r\n                        error={error.psw}\r\n                    />\r\n                    <div className=\"login-btn-wrapper\">\r\n                        <SubmitButton\r\n                            txt=\"Login\"\r\n                            width=\"200px\"\r\n                            bcolor=\"#42B8A8\"\r\n                            color=\"#fff\"\r\n                            loading={loading}\r\n                            call={onLogin}\r\n                        />\r\n                    </div>\r\n                    <p style={{ color: error.color, textAlign: \"center\" }}>{error.general}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/input/input\";\r\nimport PswInput from \"../../components/pswInput/pswInput\";\r\nimport SubmitButton from \"../submitButton/submitButton\";\r\nimport { mailValidation, textValidation, repswValidation } from \"../../validations/validations\";\r\nimport Wvalidator from \"wallet-address-validator\";\r\nimport { sendSignupData } from \"../../api/api\";\r\nimport \"./signupForm.scss\";\r\n\r\nconst SignupForm = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [field, setField] = useState({\r\n        name: \"\",\r\n        surname: \"\",\r\n        wallet: \"\",\r\n        mail: \"\",\r\n        psw: \"\",\r\n        repsw: \"\",\r\n    });\r\n    const [error, setError] = useState({\r\n        name: \"\",\r\n        surname: \"\",\r\n        wallet: \"\",\r\n        mail: \"\",\r\n        psw: \"\",\r\n        repsw: \"\",\r\n        general: \"\",\r\n        color: \"#4ED900\",\r\n    });\r\n\r\n    const onChange = (e) => {\r\n        setField({\r\n            ...field,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n        setError({\r\n            ...error,\r\n            [e.target.name]: \"\",\r\n        });\r\n    };\r\n\r\n    const onSign = async () => {\r\n        //name validation\r\n        setLoading(() => true);\r\n        const nameIsValid = textValidation(field.name);\r\n        nameIsValid\r\n            ? setError((error) => ({ ...error, name: \"\" }))\r\n            : setError((error) => ({ ...error, name: \"Name is required\" }));\r\n        //surname validation\r\n        const surnameIsValid = textValidation(field.surname);\r\n        surnameIsValid\r\n            ? setError((error) => ({ ...error, surname: \"\" }))\r\n            : setError((error) => ({ ...error, surname: \"Surname is required\" }));\r\n        //wallet validation\r\n        const walletIsValid = Wvalidator.validate(field.wallet, \"ETH\");\r\n        walletIsValid\r\n            ? setError((error) => ({ ...error, wallet: \"\" }))\r\n            : setError((error) => ({ ...error, wallet: \"Invalid ethereum wallet\" }));\r\n        //mail validation\r\n        const mailIsValid = mailValidation(field.mail);\r\n        if (mailIsValid === \"invalid\") {\r\n            setError((error) => ({ ...error, mail: \"Invalid email\" }));\r\n        } else if (mailIsValid === \"required\") {\r\n            setError((error) => ({ ...error, mail: \"Email is required\" }));\r\n        } else setError((error) => ({ ...error, mail: \"\" }));\r\n        //psw validation\r\n        const pswIsValid = textValidation(field.psw);\r\n        pswIsValid\r\n            ? setError((error) => ({ ...error, psw: \"\" }))\r\n            : setError((error) => ({ ...error, psw: \"Password is required\" }));\r\n        //repsw validation\r\n        const repswIsValid = repswValidation(field.psw, field.repsw);\r\n        if (repswIsValid === \"required\") {\r\n            setError((error) => ({ ...error, repsw: \"Repeat password is required\" }));\r\n        } else if (repswIsValid === \"nomatch\") {\r\n            setError((error) => ({ ...error, repsw: \"Passwords don't match\" }));\r\n        } else setError((error) => ({ ...error, repsw: \"\" }));\r\n        if (\r\n            nameIsValid &&\r\n            surnameIsValid &&\r\n            mailIsValid === \"valid\" &&\r\n            pswIsValid &&\r\n            repswIsValid === \"valid\"\r\n        ) {\r\n            const res = await sendSignupData(field);\r\n            if (res.ok) {\r\n                setLoading(() => false);\r\n                setError((prev) => ({ ...prev, color: \"#4ED900\", general: \"Signed up correctly\" }));\r\n            } else {\r\n                setLoading(() => false);\r\n                setError((prev) => ({\r\n                    ...prev,\r\n                    color: \"#ff0000\",\r\n                    general: res.message,\r\n                }));\r\n            }\r\n        }\r\n        setLoading(() => false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"signup-form\">\r\n            <div className=\"first-row\">\r\n                <Input\r\n                    classe=\"deskinput first\"\r\n                    name=\"name\"\r\n                    label=\"First Name\"\r\n                    placeholder=\"Name\"\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    error={error.name}\r\n                />\r\n                <Input\r\n                    classe=\"deskinput\"\r\n                    name=\"surname\"\r\n                    label=\"Surname\"\r\n                    placeholder=\"Surname\"\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    error={error.surname}\r\n                />\r\n            </div>\r\n            <div className=\"rest\">\r\n                <Input\r\n                    classe=\"input\"\r\n                    name=\"wallet\"\r\n                    label=\"Wallet\"\r\n                    placeholder=\"Ethereum Wallet\"\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    error={error.wallet}\r\n                />\r\n                <Input\r\n                    classe=\"input\"\r\n                    name=\"mail\"\r\n                    label=\"Email\"\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    onChange={onChange}\r\n                    error={error.mail}\r\n                />\r\n                <PswInput\r\n                    name=\"psw\"\r\n                    label=\"Password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={onChange}\r\n                    error={error.psw}\r\n                />\r\n                <PswInput\r\n                    name=\"repsw\"\r\n                    label=\"Repeat Password\"\r\n                    placeholder=\"Repeat Password\"\r\n                    onChange={onChange}\r\n                    error={error.repsw}\r\n                />\r\n            </div>\r\n            <div className=\"sign-btn-wrapper\">\r\n                <SubmitButton\r\n                    txt=\"Sign up\"\r\n                    width=\"200px\"\r\n                    bcolor=\"#42B8A8\"\r\n                    color=\"#fff\"\r\n                    loading={loading}\r\n                    call={onSign}\r\n                />\r\n            </div>\r\n            <p style={{ color: error.color, textAlign: \"center\" }}>{error.general}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport SignupForm from \"../../components/signupForm/signupForm\";\r\nimport signupImg from \"../../img/sign.png\";\r\nimport \"./signup.scss\";\r\n\r\nconst signup = () => {\r\n    return (\r\n        <div className=\"signup\">\r\n            <Navbar />\r\n            <div className=\"content-wrapper \">\r\n                <div>\r\n                    <img src={signupImg} alt=\"aside img\" className=\"aside-img\"></img>\r\n                </div>\r\n                <div className=\"signup-main\">\r\n                    <p className=\"signup-title\">Join PhoBlock</p>\r\n                    <SignupForm />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default signup;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport \"./categorySelect.scss\";\r\n\r\nconst CategorySelect = ({ label, name, onChange }) => {\r\n    const categories = [\r\n        { label: \"landscape\", value: \"landscape\" },\r\n        { label: \"urban\", value: \"urban\" },\r\n        { label: \"cities\", value: \"cities\" },\r\n        { label: \"human\", value: \"human\" },\r\n        { label: \"nature\", value: \"nature\" },\r\n        { label: \"cars\", value: \"cars\" },\r\n        { label: \"selfie\", value: \"selfie\" },\r\n        { label: \"art\", value: \"art\" },\r\n        { label: \"animals\", value: \"animals\" },\r\n    ];\r\n    return (\r\n        <div className=\"category-select\">\r\n            <label className=\"select-label\">{label}</label>\r\n            <Select\r\n                isMulti\r\n                options={categories}\r\n                className=\"react-select-container\"\r\n                classNamePrefix=\"react-select\"\r\n                name={name}\r\n                onChange={onChange}\r\n                theme={(theme) => ({\r\n                    ...theme,\r\n                    borderRadius: 6,\r\n                    colors: {\r\n                        ...theme.colors,\r\n                        primary: \"#43b9a9\",\r\n                        borderWidth: 0,\r\n                        border: 0,\r\n                    },\r\n                })}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategorySelect;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ImCross } from \"react-icons/im\";\r\nimport CategorySelect from \"../categorySelect/categorySelect\";\r\nimport SubmitButton from \"../submitButton/submitButton\";\r\nimport { addImage } from \"../../api/api\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport IpfsApi from \"ipfs-http-client\";\r\nimport \"./uploadForm.scss\";\r\n\r\nconst UploadForm = ({ display, onClose }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [fields, setFields] = useState({ select: [\"\"] });\r\n    const [loading, setLoading] = useState(false);\r\n    const [isFile, setIsFile] = useState(\"\");\r\n    const [ipfsMsg, setIpfsMsg] = useState({\r\n        msg: \"\",\r\n        color: \"#4ED900\",\r\n    });\r\n    const { user } = useContext(UserContext);\r\n\r\n    const ipfs = IpfsApi({\r\n        host: \"ipfs.infura.io\",\r\n        port: \"5001\",\r\n        protocol: \"https\",\r\n    });\r\n\r\n    const onSelect = (ob) => {\r\n        if (ob) {\r\n            const categories = ob.map((e) => {\r\n                return e.value;\r\n            });\r\n            setFields((field) => ({\r\n                ...field,\r\n                select: categories,\r\n            }));\r\n            setIpfsMsg(() => ({\r\n                msg: \"\",\r\n                color: \"#ff0000\",\r\n            }));\r\n        }\r\n    };\r\n\r\n    const upload = async () => {\r\n        if (selectedFile) {\r\n            setLoading(() => true);\r\n            setIsFile(() => \"\");\r\n            const ipfsres = await ipfs.add(selectedFile);\r\n            if (ipfsres) {\r\n                setIpfsMsg(() => ({\r\n                    msg: \"Image uploaded to IPFS successfully\",\r\n                    color: \"#4ED900\",\r\n                }));\r\n                addImage(fields.select, user.author, ipfsres.path, user.wallet);\r\n                setLoading(() => false);\r\n            } else {\r\n                setIpfsMsg(() => ({\r\n                    msg: \"An error occured when uploading to ipfs\",\r\n                    color: \"#ff0000\",\r\n                }));\r\n                setLoading(() => false);\r\n            }\r\n        } else setIsFile(() => \"Upload a file\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={display ? \"modal\" : \"no-modal\"}>\r\n                <div className=\"modal-back\"></div>\r\n                <div className=\"container\">\r\n                    <div className=\"info\">\r\n                        <div className=\"form\">\r\n                            <div className=\"close-wrapper\">\r\n                                <button\r\n                                    className=\"close-btn\"\r\n                                    onClick={() => {\r\n                                        setIsFile(() => \"\");\r\n                                        onClose();\r\n                                    }}\r\n                                >\r\n                                    <ImCross className=\"x\" />\r\n                                </button>\r\n                            </div>\r\n                            <p className=\"form-title\">Upload images</p>\r\n                            <input\r\n                                type=\"file\"\r\n                                onChange={(e) => setSelectedFile(e.target.files[0])}\r\n                            />\r\n                            <p className=\"file-error\">{isFile}</p>\r\n                            <CategorySelect\r\n                                label=\"Choose categories for your image\"\r\n                                name=\"select\"\r\n                                onChange={onSelect}\r\n                            />\r\n                            <div className=\"btn-wrap\">\r\n                                <SubmitButton\r\n                                    txt=\"Upload\"\r\n                                    width=\"200px\"\r\n                                    bcolor=\"#42B8A8\"\r\n                                    color=\"#fff\"\r\n                                    loading={loading}\r\n                                    call={upload}\r\n                                />\r\n                            </div>\r\n                            <p style={{ color: ipfsMsg.color, textAlign: \"center\" }}>\r\n                                {ipfsMsg.msg}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadForm;\r\n","import React from \"react\";\r\nimport \"./authorImage.scss\";\r\n\r\nconst authorImage = ({ link }) => {\r\n    return (\r\n        <div className=\"author-image-wrapper\">\r\n            <img\r\n                src={`https://ipfs.infura.io/ipfs/${link}`}\r\n                alt=\"profile\"\r\n                className=\"author-image\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default authorImage;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport UploadForm from \"../../components/uploadForm/uploadForm\";\r\nimport { logout, getImagesByAuthor } from \"../../api/api\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport Identicon from \"react-identicons\";\r\nimport AuthorImage from \"../../components/authorImage/authorImage\";\r\nimport \"./profile.scss\";\r\n\r\nconst Profile = () => {\r\n    const { user, setUser } = useContext(UserContext);\r\n    const [display, setDisplay] = useState({ uploadForm: false });\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    const getAuthorImages = async () => {\r\n        const img = await getImagesByAuthor(user.author);\r\n        if (img.ok) {\r\n            for (let i = 0; i < img.send.length; i++) {\r\n                setUrl((prev) => [...prev, { id: i, hash: img.send[i].attributes.hash }]);\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAuthorImages();\r\n    }, []);\r\n\r\n    const showModal = () => {\r\n        setDisplay(() => ({\r\n            uploadForm: true,\r\n        }));\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setDisplay(() => ({\r\n            uploadForm: false,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <UploadForm display={display.uploadForm} onClose={closeModal} />\r\n            <Navbar />\r\n            <div className=\"profile-header\">\r\n                <div className=\"profile-img\">\r\n                    <Identicon string={user.author} size={100} />\r\n                </div>\r\n                <div className=\"profile-data\">\r\n                    <p className=\"info\">\r\n                        <strong>Name: </strong>\r\n                        {user.author}\r\n                    </p>\r\n                    <p className=\"info\">\r\n                        <strong>Email: </strong>\r\n                        {user.mail}\r\n                    </p>\r\n                    <p className=\"info\">\r\n                        <strong>Wallet: </strong>\r\n                        {user.wallet}\r\n                    </p>\r\n                </div>\r\n                <div className=\"logout-wrap\">\r\n                    <button\r\n                        className=\"logout\"\r\n                        onClick={() => {\r\n                            logout();\r\n                            setUser(() => ({ logged: false }));\r\n                        }}\r\n                    >\r\n                        Log out\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n                <button className=\"upload-btn\" onClick={() => showModal()}>\r\n                    Upload Images\r\n                </button>\r\n            </div>\r\n            <div className=\"profile-main\">\r\n                {url\r\n                    ? url.map((c) => {\r\n                          return <AuthorImage key={c.id} link={c.hash} />;\r\n                      })\r\n                    : \"\"}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport \"./header.scss\";\r\n\r\nconst header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"text-wrapper\">\r\n                <p className=\"title\">PhoBlock</p>\r\n                <p className=\"sub-title\">\r\n                    A community driven photo sharing app. Your pictures. Your platform.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default header;\r\n","import React, { useState } from \"react\";\r\nimport \"./downloadImage.scss\";\r\n\r\nconst DownloadImage = ({ url, wallet, author, cid, onDownload }) => {\r\n    const [data] = useState({ hash: url, wallet, author, cid });\r\n    const ipfsUrl = `https://ipfs.infura.io/ipfs/${url}`;\r\n    return (\r\n        <div className=\"download-img-wrapper\">\r\n            <img src={ipfsUrl} alt=\"homepage\" className=\"img-home\" />\r\n            <div className=\"btn-wrapper\">\r\n                <button\r\n                    className=\"btn-download\"\r\n                    onClick={() => onDownload(data.hash, data.cid, data.wallet)}\r\n                >\r\n                    Download\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DownloadImage;\r\n","export const phoTokenAbi = [\r\n    {\r\n        inputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"constructor\",\r\n    },\r\n    {\r\n        anonymous: false,\r\n        inputs: [\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"from\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"address\",\r\n                name: \"to\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                indexed: false,\r\n                internalType: \"uint256\",\r\n                name: \"amount\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"Transfer\",\r\n        type: \"event\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"balances\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"decimals\",\r\n        outputs: [\r\n            {\r\n                internalType: \"uint8\",\r\n                name: \"\",\r\n                type: \"uint8\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"receiver\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        name: \"mint\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"name\",\r\n        outputs: [\r\n            {\r\n                internalType: \"string\",\r\n                name: \"\",\r\n                type: \"string\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"owner\",\r\n        outputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"\",\r\n                type: \"address\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [],\r\n        name: \"symbol\",\r\n        outputs: [\r\n            {\r\n                internalType: \"string\",\r\n                name: \"\",\r\n                type: \"string\",\r\n            },\r\n        ],\r\n        stateMutability: \"view\",\r\n        type: \"function\",\r\n    },\r\n    {\r\n        inputs: [\r\n            {\r\n                internalType: \"address\",\r\n                name: \"receiver\",\r\n                type: \"address\",\r\n            },\r\n            {\r\n                internalType: \"uint256\",\r\n                name: \"amount\",\r\n                type: \"uint256\",\r\n            },\r\n        ],\r\n        name: \"transfer\",\r\n        outputs: [],\r\n        stateMutability: \"nonpayable\",\r\n        type: \"function\",\r\n    },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport Header from \"../../components/header/header\";\r\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from \"react-toasts\";\r\nimport DownloadImage from \"../../components/downloadImage/downloadImage\";\r\nimport { getImages } from \"../../api/api\";\r\nimport toBuffer from \"it-to-buffer\";\r\nimport IpfsApi from \"ipfs-http-client\";\r\nimport Web3 from \"web3\";\r\nimport { phoTokenAbi } from \"../../contracts/photoken\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = () => {\r\n    const [url, setUrl] = useState(\"\");\r\n    const ipfs = IpfsApi({\r\n        host: \"ipfs.infura.io\",\r\n        port: \"5001\",\r\n        protocol: \"https\",\r\n    });\r\n    const smartContractAdress = \"0x4c3567827e6DE0E354fa91F443331c4A09b3F69E\";\r\n    const web3 = new Web3(\r\n        Web3.givenProvider || \"https://goerli.infura.io/v3/2f9903cb5e0c4b20884015df6a4295ef\"\r\n    );\r\n    //const accounts = await window.ethereum.enable();\r\n    //const account = accounts[0];\r\n    web3.eth.getAccounts(console.log);\r\n\r\n    const phoContract = new web3.eth.Contract(phoTokenAbi, smartContractAdress);\r\n    /*const setData = async e => {\r\n        e.preventDefault();\r\n        \r\n        const gas = await HelloContract.methods.setGreeting(greeting).estimateGas();\r\n        const result = await HelloContract.methods\r\n          .setGreeting(greeting)\r\n          .send({ from: account, gas });\r\n        console.log(result);\r\n      };*/\r\n    const getHomeImages = async () => {\r\n        const img = await getImages();\r\n        if (img.ok) {\r\n            for (let i = 0; i < img.send.length; i++) {\r\n                setUrl((prev) => [\r\n                    ...prev,\r\n                    {\r\n                        id: i,\r\n                        hash: img.send[i].attributes.hash,\r\n                        wallet: img.send[i].attributes.wallet,\r\n                        author: img.send[i].attributes.author,\r\n                        orientation: img.send[i].attributes.orientation,\r\n                        cid: img.send[i].attributes.cid,\r\n                    },\r\n                ]);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getHomeImages();\r\n    }, []);\r\n\r\n    const onDownload = async (hash, cid, wallet) => {\r\n        const { ethereum } = window;\r\n        if (ethereum) {\r\n            if (ethereum.isMetaMask) {\r\n                console.log(\"Home -> cid\", cid);\r\n                console.log(\"the img hash is -> \", hash);\r\n                console.log(\"file: home.js ~ line 186 ~ onDownload ~ author\", wallet);\r\n                const transfer = await phoContract.methods.mint(wallet).call();\r\n                console.log(\"🚀 ~ file: home.js ~ line 190 ~ onDownload ~ transfer\", transfer);\r\n            } else {\r\n                ToastsStore.warning(\"Metamask not detected\");\r\n            }\r\n        } else {\r\n            ToastsStore.warning(\"Metamask not detected\");\r\n        }\r\n        //const ct = await toBuffer(ipfs.get(hash));\r\n        //console.log(\"Home -> ct\", ct);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Header />\r\n            <section className=\"img-wrapper\">\r\n                {url\r\n                    ? url.map((c) => {\r\n                          return (\r\n                              <DownloadImage\r\n                                  key={c.id}\r\n                                  url={c.hash}\r\n                                  author={c.author}\r\n                                  wallet={c.wallet}\r\n                                  cid={c.cid}\r\n                                  onDownload={onDownload}\r\n                              />\r\n                          );\r\n                      })\r\n                    : \"\"}\r\n            </section>\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.BOTTOM_CENTER} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Navbar from \"../../components/navbar/navbar\";\r\n\r\nconst about = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            About\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default about;","import React, { useState } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AppRoute from \"./components/appRoute/appRoute\";\r\nimport Login from \"./pages/login/login\";\r\nimport Signup from \"./pages/signup/signup\";\r\nimport Profile from \"./pages/profile/profile\";\r\nimport Home from \"./pages/home/home\";\r\nimport About from \"./pages/about/about\";\r\nimport { UserContext } from \"./context/user\";\r\nimport Parse from \"parse\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n    const { REACT_APP_ID, REACT_APP_KEY } = process.env;\r\n\r\n    const getUserLoged = () => {\r\n        const session = JSON.parse(localStorage.getItem(`Parse/${REACT_APP_ID}/currentUser`));\r\n        if (session) {\r\n            return session.sessionToken\r\n                ? {\r\n                      logged: true,\r\n                      author: session.author,\r\n                      mail: session.email,\r\n                      wallet: session.wallet,\r\n                      token: session.sessionToken,\r\n                  }\r\n                : { logged: false };\r\n        } else return { logged: false };\r\n    };\r\n\r\n    const [user, setUser] = useState(getUserLoged());\r\n\r\n    Parse.serverURL = \"https://parseapi.back4app.com\";\r\n    Parse.initialize(REACT_APP_ID, REACT_APP_KEY);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ user, setUser }}>\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/signup\" component={Signup} />\r\n                <Route path=\"/about\" component={About} />\r\n                <AppRoute path=\"/profile\" component={Profile} />\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/pho_logo.685cb461.png\";","module.exports = __webpack_public_path__ + \"static/media/sign.ef383843.png\";"],"sourceRoot":""}