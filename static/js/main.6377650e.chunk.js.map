{"version":3,"sources":["img/pho_logo.png","context/user.js","components/navbar/navbar.js","pages/login/login.js","pages/signup/signup.js","pages/profile/profile.js","components/header/header.js","components/downloadImage/downloadImage.js","pages/home/home.js","pages/about/about.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","createContext","Navbar","useState","toggle","setToggle","user","useContext","className","onClick","to","src","logo","alt","logged","login","signup","profile","header","downloadImage","url","orientation","style","backgroundImage","home","about","App","session","localStorage","getItem","token","name","mail","email","sessionToken","getUserLoged","setUser","Provider","value","path","component","Login","Signup","exact","Home","About","Profile","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6377650e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pho_logo.685cb461.png\";","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(\"u\");\r\n","import React, { useContext, useState } from \"react\";\r\nimport { TiThMenu } from \"react-icons/ti\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport logo from \"../../img/pho_logo.png\";\r\nimport \"./navbar.scss\";\r\n\r\nconst Navbar = () => {\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    const onToggle = () => {\r\n        setToggle(() => !toggle);\r\n    };\r\n\r\n    const { user } = useContext(UserContext);\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <button className=\"activator\" onClick={() => onToggle()}>\r\n                <TiThMenu />\r\n            </button>\r\n            <Link to=\"/home\">\r\n                <img className=\"logo\" src={logo} alt=\"pho block logo\" />\r\n            </Link>\r\n            {user.logged ? (\r\n                <ul className={toggle ? \"links show-nav\" : \"links\"}>\r\n                    <Link className=\"ali\" to=\"/about\">\r\n                        About\r\n                    </Link>\r\n                    <Link className=\"ali dist\" to=\"/profile\">\r\n                        Profile\r\n                    </Link>\r\n                </ul>\r\n            ) : (\r\n                <ul className={toggle ? \"links show-nav\" : \"links\"}>\r\n                    <Link className=\"ali dist\" to=\"/about\">\r\n                        About\r\n                    </Link>\r\n                    <Link className=\"ali dist\" to=\"/login\">\r\n                        Log in\r\n                    </Link>\r\n                    <Link className=\"ali\" to=\"/signup\">\r\n                        Sign Up\r\n                    </Link>\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport Navbar from \"../../components/navbar/navbar\";\r\n\r\nconst login = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            Login Page\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default login;","import React from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\n\r\nconst signup = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default signup;\r\n","import React from 'react';\r\nimport Navbar from \"../../components/navbar/navbar\";\r\n\r\nconst profile = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            Profile\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default profile;","import React from \"react\";\r\nimport \"./header.scss\";\r\n\r\nconst header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"text-wrapper\">\r\n                <p className=\"title\">PhoBlock</p>\r\n                <p className=\"sub-title\">\r\n                    A community driven photo sharing app. Your pictures. Your platform.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport \"./downloadImage.scss\";\r\n\r\nconst downloadImage = ({ url, orientation, alt }) => {\r\n    return (\r\n        <div className={orientation}>\r\n            <div className=\"img-back\" style={{ backgroundImage: `url(${url})` }} alt={alt}></div>\r\n            <div className=\"btn-wrapper\">\r\n                <button className=\"btn-download\">Download</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default downloadImage;\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport Header from \"../../components/header/header\";\r\nimport DownloadImage from \"../../components/downloadImage/downloadImage\";\r\nimport \"./home.scss\";\r\n\r\nconst home = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Header />\r\n            {/*Get images from a server */}\r\n            <section className=\"img-wrapper\">\r\n                <DownloadImage\r\n                    url=\"https://images.wallpaperscraft.com/image/sunset_sky_clouds_121865_1080x1920.jpg\"\r\n                    orientation=\"portrait\"\r\n                    alt=\"sunset\"\r\n                />\r\n                <DownloadImage\r\n                    url=\"https://www.redskycreative.co.uk/wp-content/uploads/2018/07/Red-Sky-Creative-Design-Print-Faringdon.jpg\"\r\n                    orientation=\"horizontal\"\r\n                    alt=\"red sky\"\r\n                />\r\n                <DownloadImage\r\n                    url=\"https://cdn.techjuice.pk/wp-content/uploads/2017/09/shorthandmalaysiahowtobuy-mr.jpg\"\r\n                    orientation=\"horizontal\"\r\n                    alt=\"Malysia\"\r\n                />\r\n                <DownloadImage\r\n                    url=\"https://hostelgeeks.com/wp-content/uploads/2018/08/best-hostels-seoul-korea.jpg\"\r\n                    orientation=\"horizontal\"\r\n                    alt=\"Seoul\"\r\n                />\r\n                <DownloadImage\r\n                    url=\"http://unaideaunviaje.com/wp-content/uploads/2016/09/barcelona-40-cosas-ver-hacer-recomendadas-locales-unaideaunviaje-04.jpg\"\r\n                    orientation=\"horizontal\"\r\n                    alt=\"Barcelona\"\r\n                />\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default home;\r\n","import React from 'react';\r\nimport Navbar from \"../../components/navbar/navbar\";\r\n\r\nconst about = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            About\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default about;","import React, {useState} from 'react';\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Login from \"./pages/login/login\";\r\nimport Signup from \"./pages/signup/signup\";\r\nimport Profile from \"./pages/profile/profile\";\r\nimport Home from \"./pages/home/home\";\r\nimport About from \"./pages/about/about\";\r\nimport { UserContext } from \"./context/user\";\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n\r\n  const getUserLoged = () => {\r\n    const session = localStorage.getItem(`phouser`)\r\n        if (session) {\r\n        return session.token\r\n            ? {\r\n                  logged: true,\r\n                  name: session.name,\r\n                  mail: session.email,\r\n                  token: session.sessionToken,\r\n              }\r\n            : { logged: false };\r\n    } else return { logged: false };\r\n};\r\n\r\nconst [user, setUser] = useState(getUserLoged());\r\n\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route\r\n              path=\"/\"\r\n              exact\r\n              component={Home}\r\n              \r\n          />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/login\" component={Profile} />\r\n          <Redirect to=\"/\" />\r\n      </Switch>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}