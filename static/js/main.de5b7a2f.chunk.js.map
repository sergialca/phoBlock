{"version":3,"sources":["context/user.js","components/navbar/navbar.js","components/input/input.js","components/submitButton/submitButton.js","validations/validations.js","api/api.js","pages/login/login.js","components/signupForm/signupForm.js","pages/signup/signup.js","pages/profile/profile.js","components/header/header.js","components/downloadImage/downloadImage.js","pages/home/home.js","pages/about/about.js","App.js","serviceWorker.js","index.js","img/pho_logo.png","img/sign.png"],"names":["UserContext","createContext","Navbar","useState","toggle","setToggle","user","useContext","className","onClick","to","src","logo","alt","logged","input","name","type","value","onChange","placeholder","label","classe","error","SubmitButton","txt","loading","width","color","bcolor","call","style","backgroundColor","size","mailValidation","mail","test","textValidation","field","sendSignupData","a","axios","url","headers","send","console","log","sendLoginData","psw","method","data","email","Login","setLog","setError","setLoading","e","target","onLogin","mailIsValid","pswIsValid","SignupForm","surname","wallet","repsw","setField","onSign","nameIsValid","surnameIsValid","walletIsValid","Wvalidator","validate","repswIsValid","signup","signupImg","profile","header","downloadImage","orientation","backgroundImage","home","about","App","session","localStorage","getItem","token","sessionToken","getUserLoged","setUser","Provider","path","component","Signup","exact","Home","About","Profile","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.de5b7a2f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(\"u\");\r\n","import React, { useContext, useState } from \"react\";\r\nimport { TiThMenu } from \"react-icons/ti\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../context/user\";\r\nimport logo from \"../../img/pho_logo.png\";\r\nimport \"./navbar.scss\";\r\n\r\nconst Navbar = () => {\r\n    const [toggle, setToggle] = useState(false);\r\n\r\n    const onToggle = () => {\r\n        setToggle(() => !toggle);\r\n    };\r\n\r\n    const { user } = useContext(UserContext);\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <button className=\"activator\" onClick={() => onToggle()}>\r\n                <TiThMenu />\r\n            </button>\r\n            <Link to=\"/home\">\r\n                <img className=\"logo\" src={logo} alt=\"pho block logo\" />\r\n            </Link>\r\n            {user.logged ? (\r\n                <ul className={toggle ? \"links show-nav\" : \"links\"}>\r\n                    <Link className=\"ali\" to=\"/about\">\r\n                        About\r\n                    </Link>\r\n                    <Link className=\"ali dist\" to=\"/profile\">\r\n                        Profile\r\n                    </Link>\r\n                </ul>\r\n            ) : (\r\n                <ul className={toggle ? \"links show-nav\" : \"links\"}>\r\n                    <Link className=\"ali dist\" to=\"/about\">\r\n                        About\r\n                    </Link>\r\n                    <Link className=\"ali dist\" to=\"/login\">\r\n                        Log in\r\n                    </Link>\r\n                    <Link className=\"ali\" to=\"/signup\">\r\n                        Sign Up\r\n                    </Link>\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./input.scss\";\r\n\r\nconst input = ({ name, type, value, onChange, placeholder, label, classe, error }) => {\r\n    return (\r\n        <div className=\"input-wrapper\">\r\n            <label className=\"input-label\">{label}</label>\r\n            <input\r\n                className={classe}\r\n                name={name}\r\n                type={type}\r\n                value={value}\r\n                onChange={onChange}\r\n                placeholder={placeholder}\r\n            />\r\n            <p className=\"input-error\">{error}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;\r\n","import React from \"react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport \"./submitButton.scss\";\r\n\r\nconst SubmitButton = ({ txt, loading, width, color, bcolor, call }) => {\r\n    return (\r\n        <button\r\n            type=\"submit\"\r\n            style={{ width: width, backgroundColor: bcolor, color: color }}\r\n            className=\"btn-submit\"\r\n            onClick={() => call()}\r\n        >\r\n            {txt}\r\n            <span className=\"spin\">\r\n                <ClipLoader loading={loading} color={\"#fff\"} size={12} />\r\n            </span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default SubmitButton;\r\n","export const mailValidation = (mail) => {\r\n    if (\r\n        mail &&\r\n        !/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n            mail\r\n        )\r\n    ) {\r\n        return \"invalid\";\r\n    } else if (!mail) {\r\n        return \"required\";\r\n    } else return \"valid\";\r\n};\r\n\r\nexport const textValidation = (field) => {\r\n    if (!field) {\r\n        return false;\r\n    } else return true;\r\n};\r\n\r\nexport const repswValidation = (psw, repsw) => {\r\n    if (!repsw) {\r\n        return \"required\";\r\n    } else if (psw !== repsw) {\r\n        return \"nomatch\";\r\n    } else {\r\n        return \"valid\";\r\n    }\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst url = \"http://localhost:3001\";\r\n\r\nexport const sendSignupData = async () => {\r\n    try {\r\n        const send = await axios({\r\n            url: `${url}/signup`,\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Headers\":\r\n                    \"x-requested-with, authorization, content-type, cache-control, pragma, expires,  Content-Language\",\r\n            },\r\n        });\r\n        return send;\r\n    } catch (error) {\r\n        console.log(\"Error sending data to server when signed up\");\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const sendLoginData = async (mail, psw) => {\r\n    try {\r\n        const send = await axios({\r\n            method: \"post\",\r\n            url: `${url}/login`,\r\n            data: {\r\n                email: mail || \"\",\r\n                psw: psw || \"\",\r\n            },\r\n        });\r\n        return send;\r\n    } catch (error) {\r\n        console.log(\"Error sending data to server when loggin in\");\r\n        return false;\r\n    }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport Input from \"../../components/input/input\";\r\nimport SubmitButton from \"../../components/submitButton/submitButton\";\r\nimport { mailValidation, textValidation } from \"../../validations/validations\";\r\nimport { sendLoginData } from \"../../api/api\";\r\nimport \"./login.scss\";\r\n\r\nconst Login = () => {\r\n    const [log, setLog] = useState({ mail: \"\", psw: \"\" });\r\n    const [error, setError] = useState({ mail: \"\", psw: \"\" });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onChange = (e) => {\r\n        setLog({\r\n            ...log,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const onLogin = async () => {\r\n        setLoading(() => true);\r\n        const mailIsValid = mailValidation(log.mail);\r\n        if (mailIsValid === \"invalid\") {\r\n            setError((error) => ({ ...error, mail: \"Invalid email\" }));\r\n        } else if (mailIsValid === \"required\") {\r\n            setError((error) => ({ ...error, mail: \"Email is required\" }));\r\n        } else setError((error) => ({ ...error, mail: \"\" }));\r\n        const pswIsValid = textValidation(log.psw);\r\n        pswIsValid\r\n            ? setError((error) => ({ ...error, psw: \"\" }))\r\n            : setError((error) => ({ ...error, psw: \"Password is required\" }));\r\n        if (mailIsValid && pswIsValid) {\r\n            const res = await sendLoginData(log.mail, log.psw);\r\n            if (res) {\r\n                //go to homepage\r\n            }\r\n            setLoading(() => false);\r\n        } else {\r\n            setLoading(() => false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Navbar />\r\n            <div className=\"login-main\">\r\n                <p className=\"login-title\">Enjoy</p>\r\n                <div className=\"login-form\">\r\n                    <Input\r\n                        classe=\"input\"\r\n                        name=\"mail\"\r\n                        label=\"Email\"\r\n                        placeholder=\"Email\"\r\n                        type=\"text\"\r\n                        onChange={onChange}\r\n                        error={error.mail}\r\n                    />\r\n                    <Input\r\n                        classe=\"input\"\r\n                        name=\"psw\"\r\n                        label=\"Password\"\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        onChange={onChange}\r\n                        error={error.psw}\r\n                    />\r\n                    <div className=\"login-btn-wrapper\">\r\n                        <SubmitButton\r\n                            txt=\"Login\"\r\n                            width=\"200px\"\r\n                            bcolor=\"#42B8A8\"\r\n                            color=\"#fff\"\r\n                            loading={loading}\r\n                            call={onLogin}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport Input from \"../../components/input/input\";\r\nimport SubmitButton from \"../submitButton/submitButton\";\r\nimport { mailValidation, textValidation, repswValidation } from \"../../validations/validations\";\r\nimport Wvalidator from \"wallet-address-validator\";\r\nimport { sendSignupData } from \"../../api/api\";\r\nimport \"./signupForm.scss\";\r\n\r\nconst SignupForm = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [field, setField] = useState({\r\n        name: \"\",\r\n        surname: \"\",\r\n        wallet: \"\",\r\n        mail: \"\",\r\n        psw: \"\",\r\n        repsw: \"\",\r\n    });\r\n    const [error, setError] = useState({\r\n        name: \"\",\r\n        surname: \"\",\r\n        wallet: \"\",\r\n        mail: \"\",\r\n        psw: \"\",\r\n        repsw: \"\",\r\n    });\r\n\r\n    const onChange = (e) => {\r\n        setField({\r\n            ...field,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const onSign = async () => {\r\n        //name validation\r\n        setLoading(() => true);\r\n        const nameIsValid = textValidation(field.name);\r\n        nameIsValid\r\n            ? setError((error) => ({ ...error, name: \"\" }))\r\n            : setError((error) => ({ ...error, name: \"Name is required\" }));\r\n        //surname validation\r\n        const surnameIsValid = textValidation(field.surname);\r\n        surnameIsValid\r\n            ? setError((error) => ({ ...error, surname: \"\" }))\r\n            : setError((error) => ({ ...error, surname: \"Surname is required\" }));\r\n        //wallet validation\r\n        const walletIsValid = Wvalidator.validate(field.wallet, \"ETH\");\r\n        walletIsValid\r\n            ? setError((error) => ({ ...error, wallet: \"\" }))\r\n            : setError((error) => ({ ...error, wallet: \"Invalid ethereum wallet\" }));\r\n        //mail validation\r\n        const mailIsValid = mailValidation(field.mail);\r\n        if (mailIsValid === \"invalid\") {\r\n            setError((error) => ({ ...error, mail: \"Invalid email\" }));\r\n        } else if (mailIsValid === \"required\") {\r\n            setError((error) => ({ ...error, mail: \"Email is required\" }));\r\n        } else setError((error) => ({ ...error, mail: \"\" }));\r\n        //psw validation\r\n        const pswIsValid = textValidation(field.psw);\r\n        pswIsValid\r\n            ? setError((error) => ({ ...error, psw: \"\" }))\r\n            : setError((error) => ({ ...error, psw: \"Password is required\" }));\r\n        //repsw validation\r\n        const repswIsValid = repswValidation(field.psw, field.repsw);\r\n        if (repswIsValid === \"required\") {\r\n            setError((error) => ({ ...error, repsw: \"Repeat password is required\" }));\r\n        } else if (repswIsValid === \"nomatch\") {\r\n            setError((error) => ({ ...error, repsw: \"Passwords don't match\" }));\r\n        } else setError((error) => ({ ...error, repsw: \"\" }));\r\n        if (\r\n            nameIsValid &&\r\n            surnameIsValid &&\r\n            mailIsValid === \"valid\" &&\r\n            pswIsValid &&\r\n            repswIsValid === \"valid\"\r\n        ) {\r\n            const res = await sendSignupData(field);\r\n            if (res) {\r\n                //congrats you signed up\r\n                setLoading(() => false);\r\n            }\r\n        }\r\n        setLoading(() => false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"signup-form\">\r\n            <div className=\"first-row\">\r\n                <Input\r\n                    classe=\"deskinput first\"\r\n                    name=\"name\"\r\n                    label=\"First Name\"\r\n                    placeholder=\"Name\"\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    error={error.name}\r\n                />\r\n                <Input\r\n                    classe=\"deskinput\"\r\n                    name=\"surname\"\r\n                    label=\"Surname\"\r\n                    placeholder=\"Surname\"\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    error={error.surname}\r\n                />\r\n            </div>\r\n            <div className=\"rest\">\r\n                <Input\r\n                    classe=\"input\"\r\n                    name=\"wallet\"\r\n                    label=\"Wallet\"\r\n                    placeholder=\"Ethereum Wallet\"\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    error={error.wallet}\r\n                />\r\n                <Input\r\n                    classe=\"input\"\r\n                    name=\"mail\"\r\n                    label=\"Email\"\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    onChange={onChange}\r\n                    error={error.mail}\r\n                />\r\n                <Input\r\n                    classe=\"input\"\r\n                    name=\"psw\"\r\n                    label=\"Password\"\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    onChange={onChange}\r\n                    error={error.psw}\r\n                />\r\n                <Input\r\n                    classe=\"input\"\r\n                    name=\"repsw\"\r\n                    label=\"Repeat Password\"\r\n                    placeholder=\"Repeat Password\"\r\n                    type=\"password\"\r\n                    onChange={onChange}\r\n                    error={error.repsw}\r\n                />\r\n            </div>\r\n            <div className=\"sign-btn-wrapper\">\r\n                <SubmitButton\r\n                    txt=\"Sign up\"\r\n                    width=\"200px\"\r\n                    bcolor=\"#42B8A8\"\r\n                    color=\"#fff\"\r\n                    loading={loading}\r\n                    call={onSign}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport SignupForm from \"../../components/signupForm/signupForm\";\r\nimport signupImg from \"../../img/sign.png\";\r\nimport \"./signup.scss\";\r\n\r\nconst signup = () => {\r\n    return (\r\n        <div className=\"signup\">\r\n            <Navbar />\r\n            <div className=\"content-wrapper \">\r\n                <div>\r\n                    <img src={signupImg} alt=\"aside img\" className=\"aside-img\"></img>\r\n                </div>\r\n                <div className=\"signup-main\">\r\n                    <p className=\"signup-title\">Join PhoBlock</p>\r\n                    <SignupForm />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default signup;\r\n","import React from 'react';\r\nimport Navbar from \"../../components/navbar/navbar\";\r\n\r\nconst profile = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            Profile\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default profile;","import React from \"react\";\r\nimport \"./header.scss\";\r\n\r\nconst header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"text-wrapper\">\r\n                <p className=\"title\">PhoBlock</p>\r\n                <p className=\"sub-title\">\r\n                    A community driven photo sharing app. Your pictures. Your platform.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport \"./downloadImage.scss\";\r\n\r\nconst downloadImage = ({ url, orientation, alt }) => {\r\n    return (\r\n        <div className={orientation}>\r\n            <div className=\"img-back\" style={{ backgroundImage: `url(${url})` }} alt={alt}></div>\r\n            <div className=\"btn-wrapper\">\r\n                <button className=\"btn-download\">Download</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default downloadImage;\r\n","import React from \"react\";\r\nimport Navbar from \"../../components/navbar/navbar\";\r\nimport Header from \"../../components/header/header\";\r\nimport DownloadImage from \"../../components/downloadImage/downloadImage\";\r\nimport \"./home.scss\";\r\n\r\nconst home = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Header />\r\n            {/*Get images from a server */}\r\n            <section className=\"img-wrapper\">\r\n                <DownloadImage\r\n                    url=\"https://images.wallpaperscraft.com/image/sunset_sky_clouds_121865_1080x1920.jpg\"\r\n                    orientation=\"portrait\"\r\n                    alt=\"sunset\"\r\n                />\r\n                <DownloadImage\r\n                    url=\"https://www.redskycreative.co.uk/wp-content/uploads/2018/07/Red-Sky-Creative-Design-Print-Faringdon.jpg\"\r\n                    orientation=\"horizontal\"\r\n                    alt=\"red sky\"\r\n                />\r\n                <DownloadImage\r\n                    url=\"https://cdn.techjuice.pk/wp-content/uploads/2017/09/shorthandmalaysiahowtobuy-mr.jpg\"\r\n                    orientation=\"horizontal\"\r\n                    alt=\"Malysia\"\r\n                />\r\n                <DownloadImage\r\n                    url=\"https://hostelgeeks.com/wp-content/uploads/2018/08/best-hostels-seoul-korea.jpg\"\r\n                    orientation=\"horizontal\"\r\n                    alt=\"Seoul\"\r\n                />\r\n                <DownloadImage\r\n                    url=\"http://unaideaunviaje.com/wp-content/uploads/2016/09/barcelona-40-cosas-ver-hacer-recomendadas-locales-unaideaunviaje-04.jpg\"\r\n                    orientation=\"horizontal\"\r\n                    alt=\"Barcelona\"\r\n                />\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default home;\r\n","import React from 'react';\r\nimport Navbar from \"../../components/navbar/navbar\";\r\n\r\nconst about = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            About\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default about;","import React, {useState} from 'react';\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Login from \"./pages/login/login\";\r\nimport Signup from \"./pages/signup/signup\";\r\nimport Profile from \"./pages/profile/profile\";\r\nimport Home from \"./pages/home/home\";\r\nimport About from \"./pages/about/about\";\r\nimport { UserContext } from \"./context/user\";\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n\r\n  const getUserLoged = () => {\r\n    const session = localStorage.getItem(`phouser`)\r\n        if (session) {\r\n        return session.token\r\n            ? {\r\n                  logged: true,\r\n                  name: session.name,\r\n                  mail: session.email,\r\n                  token: session.sessionToken,\r\n              }\r\n            : { logged: false };\r\n    } else return { logged: false };\r\n};\r\n\r\nconst [user, setUser] = useState(getUserLoged());\r\n\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      <Switch>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route\r\n              path=\"/\"\r\n              exact\r\n              component={Home}\r\n              \r\n          />\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/login\" component={Profile} />\r\n          <Redirect to=\"/\" />\r\n      </Switch>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/pho_logo.685cb461.png\";","module.exports = __webpack_public_path__ + \"static/media/sign.ef383843.png\";"],"sourceRoot":""}